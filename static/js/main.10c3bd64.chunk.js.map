{"version":3,"sources":["Components/SearchBox.js","Components/FilterOptions.js","Components/SearchBar.js","Components/ControlBar.js","Components/ListItem.js","Components/FilterableList.js","Components/App.js","index.js"],"names":["SearchBox","className","icon","faSearch","placeholder","value","this","props","searchTerm","onChange","e","handleUpdate","target","Component","FilterOptions","filterOption","htmlFor","type","id","name","checked","handleFilterChange","SearchBar","ControlBar","faRedoAlt","faTrashAlt","faCloudDownloadAlt","ListItem","ICONS","jpg","faFileImage","mov","faFileVideo","txt","faFileAlt","mp3","faFileAudio","fileType","size","status","FilterableList","list","files","filter","file","includes","map","key","defaultProps","App","state","term","setState","option","updateSearchTerm","updateFilterOption","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10c3bd64.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../Styles/SearchBox.css\";\n// react component from a third party library used to display VG icons from Font Awesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class SearchBox extends Component {\n  render() {\n    return (\n      <div className=\"SearchBox\">\n        <FontAwesomeIcon icon={faSearch} />\n        {/* USE VALUE TO GET THE VALUE OF THE INPUT AND ADD AN ONCHANGE EVENT HANDLER TO THE INPUT*/}\n        <input\n          placeholder=\"Search term\"\n          value={this.props.searchTerm}\n          onChange={(e) => this.props.handleUpdate(e.target.value)}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../Styles/FilterOptions.css\";\n\n// THIS COMPONENT IS JUST A LINE OF RADIO BUTTONS\n\nexport default class FilterOptions extends Component {\n  render() {\n    // USE OBJECT DESTRUCTURING TO GET THE VALUE OF FILTEROPTION FROM PROPS\n    const { filterOption } = this.props;\n    return (\n      <div className=\"FilterOptions\">\n        <div className=\"FilterOptions__option\">\n          <label htmlFor=\"filter_all\">\n            <input\n              type=\"radio\"\n              value=\"All\"\n              id=\"filter_all\"\n              name=\"filter\"\n              checked={filterOption === \"All\"}\n              onChange={(e) => this.props.handleFilterChange(e.target.value)}\n              // IF FILTEROPTION === ALL, THEN THIS EVALUATES TO CHECKED={TRUE}\n            />\n            All\n          </label>\n        </div>\n        <div className=\"FilterOptions__option\">\n          <label htmlFor=\"filter_uploaded\">\n            <input\n              type=\"radio\"\n              value=\"Uploaded\"\n              id=\"filter_uploaded\"\n              name=\"filter\"\n              checked={filterOption === \"Uploaded\"}\n              onChange={(e) => this.props.handleFilterChange(e.target.value)}\n            />\n            Uploaded\n          </label>\n        </div>\n        <div className=\"FilterOptions__option\">\n          <label htmlFor=\"filter_synced\">\n            <input\n              type=\"radio\"\n              value=\"Synced\"\n              id=\"filter_synced\"\n              name=\"filter\"\n              checked={filterOption === \"Synced\"}\n              onChange={(e) => this.props.handleFilterChange(e.target.value)}\n            />\n            Synced\n          </label>\n        </div>\n        <div className=\"FilterOptions__option\">\n          <label htmlFor=\"filter_new\">\n            <input\n              type=\"radio\"\n              value=\"New\"\n              id=\"filter_new\"\n              name=\"filter\"\n              checked={filterOption === \"New\"}\n              onChange={(e) => this.props.handleFilterChange(e.target.value)}\n            />\n            New\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../Styles/SearchBar.css\";\nimport SearchBox from \"./SearchBox\";\nimport FilterOptions from \"./FilterOptions\";\n\n// THIS IS THE SECOND COMPONENT THAT IS GETTING SEARCHTERM AND FILTEROPTION AS PROPS IS THE SEARCHBAR COMPONENT\n// PASS\nexport default class SearchBar extends Component {\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar__heading\">\n          <h1>File Uploader</h1>\n        </div>\n        <div className=\"SearchBar__controls\">\n          <SearchBox\n            searchTerm={this.props.searchTerm}\n            handleUpdate={this.props.handleUpdate}\n          />\n          <FilterOptions\n            filterOption={this.props.filterOption}\n            handleFilterChange={this.props.handleFilterChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../Styles/ControlBar.css\";\n//IMPORT FONTAWESOME ICON LIBRARY AND THEN IMPORT SPECIFIC ICONS\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faRedoAlt,\n  faTrashAlt,\n  faCloudDownloadAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class ControlBar extends Component {\n  render() {\n    return (\n      <div className=\"ControlBar\">\n        <div className=\"ControlBar__btn\">\n          <FontAwesomeIcon icon={faRedoAlt} />\n        </div>\n        <div className=\"ControlBar__btn\">\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </div>\n        <div className=\"ControlBar__btn\">\n          <FontAwesomeIcon icon={faCloudDownloadAlt} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../Styles/ListItem.css\";\nimport ControlBar from \"./ControlBar\";\n// IMPORT FONT AWESOME LIBRARY\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// IMPORT SPECIFIC ICONS FROM FONT AWESOME\nimport {\n  faFileImage,\n  faFileAudio,\n  faFileAlt,\n  faFileVideo,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// CREATE THE COMPONENT FOR THE INDIVIDUAL LIST ITEM\n\nexport default class ListItem extends Component {\n  render() {\n    const ICONS = {\n      jpg: faFileImage,\n      mov: faFileVideo,\n      txt: faFileAlt,\n      mp3: faFileAudio,\n    };\n    return (\n      <div className=\"ListItem\">\n        <div className=\"ListItem__icon\">\n          <div className=\"ListItem__circle\">\n            <FontAwesomeIcon icon={ICONS[this.props.fileType] || faFileAlt} />\n          </div>\n        </div>\n        <div className=\"ListItem__content\">\n          <div className=\"ListItem__heading\">\n            <div className=\"ListItem__title\">{this.props.name}</div>\n            <div className=\"ListItem__size\">{this.props.size}</div>\n          </div>\n          <div className=\"ListItem__actions\">\n            <div className=\"ListItem__status\">{this.props.status}</div>\n            <ControlBar />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../Styles/FilterableList.css\";\nimport ListItem from \"./ListItem\";\n\n// USE THE TWO VALUES PASSED IN AS PROPS TO FILTER THE ARRAY OF FILES DISPLAYED\n// ACCESS THE VALUES FROM THE PROPS, ITERATE OVER THE FILES ARRAY KEEPING THOSE THAT MATCH THE CRITERIA: THE FILE NAME CONTAINS THE SEARCH TERM AND THE FILE STATUS IS EQUAL TO THE FILTEROPTION OR THE FILTEROPTION IS ALL\n\nexport default class FilterableList extends Component {\n  render() {\n    // CREAT A VARIABLE TO HOLD DATA FROM PROPS OBJECT DESTRUCTURING\n    const { searchTerm, filterOption } = this.props;\n    const list = this.props.files\n      .filter(\n        (file) =>\n          file.name.includes(searchTerm) &&\n          (filterOption === \"All\" || file.status === filterOption)\n      )\n      .map((file, key) => <ListItem {...file} key={key} />);\n    // WHAT IS GOING ON WITH THE USE OF THE SPREAD OPERATOR HERE?\n    return <div className=\"FilterableList\">{list}</div>;\n  }\n}\n\n// ESTABLISH DEFAULT PROPS\nFilterableList.defaultProps = {\n  files: [],\n};\n","import React, { Component } from \"react\";\nimport \"../Styles/App.css\";\nimport SearchBar from \"./SearchBar\";\nimport FilterableList from \"./FilterableList\";\n\nexport default class App extends Component {\n  // initialize stat using a constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: \"\",\n      filterOption: \"All\",\n    };\n  }\n\n  // CREATE A METHOD TO UPDATE STATE\n  updateSearchTerm(term) {\n    this.setState({\n      searchTerm: term,\n    });\n  }\n\n  updateFilterOption(option) {\n    this.setState({\n      filterOption: option,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchBar\n          searchTerm={this.state.searchTerm}\n          filterOption={this.state.filterOption}\n          handleUpdate={(term) => this.updateSearchTerm(term)}\n          handleFilterChange={(option) => this.updateFilterOption(option)}\n        />\n        {/* pass files prop along to FilterableList */}\n        {/* SearchBar also gets passed state because this is where searchTerm is updated */}\n        <FilterableList\n          files={this.props.files}\n          searchTerm={this.state.searchTerm}\n          filterOption={this.state.filterOption}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/index.css\";\nimport App from \"./Components/App\";\n\n// add a const variable to hold some data for you to test this app\nconst FILES = [\n  { fileType: \"jpg\", size: \"4.3MB\", name: \"me on skis.jpg\", status: \"Synced\" },\n  {\n    fileType: \"mov\",\n    size: \"1.3GB\",\n    name: \"cats falling.mov\",\n    status: \"Uploaded\",\n  },\n  {\n    fileType: \"txt\",\n    size: \"0.9KB\",\n    name: \"My December expenses.txt\",\n    status: \"Uploaded\",\n  },\n  {\n    fileType: \"mp3\",\n    size: \"3.4MB\",\n    name: \"disturbed_sound_of_silence.mp3\",\n    status: \"New\",\n  },\n];\n\n//\nReactDOM.render(\n  <React.StrictMode>\n    {/*pass the props into the app Component*/}\n    <App files={FILES} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// break the application into single-minded components\n// then decide which data are state and which props are needed and where state would live in your components hierarchy\n// have a working React application with a hierarchy of mponents passing data to each other via props, with no interactivity with the user just yet\n// then add basic styling\n// finally add the interactivity for the user\n\n/*\nHOW TO IMPORT FONT AWESOME COMPONENT\n$ npm install @fortawesome/fontawesome-svg-core\n$ npm install @fortawesome/free-solid-svg-icons\n$ npm install @fortawesome/react-fontawesome\n*/\n\n/*\nNEXT FEATURES\n - ADD A METHOD THAT ALLOWS YOU TO ADD FILES\n - ADD A METHOD THAT ALLOWS YOU TO DELETE FILES\n - ACTUALLY IMPLEMENT FILE SYSTEM TO THIS APPLICATION\n*/\n"],"sourceRoot":""}